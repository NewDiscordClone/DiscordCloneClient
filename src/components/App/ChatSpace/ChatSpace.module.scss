@import "../imageContainer";

$backgroundColor: #313131;

.chatSpaceColumn {
  display: flex;
  flex-direction: column;
  flex: 1;
  background: $backgroundColor;
  box-sizing: border-box;
  float: left;
  overflow: hidden;
  height: 100vh;

  & > .firstRow {
    display: flex;
    align-items: center;
    padding-left: 10px;
    height: 56px; // Set the height of the first row
    background-color: #181818;
    color: #fff;
    border-bottom: 1.5px solid #AB701E;
    &>.icon{
      @include customImageContainer(10px, 25px)
    }
  }

  & > .secondRow {
    flex: 1;
    padding-right: 4px;
    // The second row will take the remaining space
    color: #fff;
    flex-direction: column;
    // Optionally, you can set some min and max height for resizing purposes
    overflow: auto; // Add scroll if content exceeds the max height
  }

  & > .thirdRow {
    flex: 0 0 1;
    min-height: 60px; // Set the height of the third row
    display: flex;
    flex-direction: column;
    background-color: $backgroundColor;
    color: #fff;
    margin-bottom: 0;
  }
}

.textArea {
  resize: none;
  overflow: hidden;
  height: auto;
  margin-bottom: 10px;
  &:focus {
    outline: none;
    border-color: transparent; /* Change border color when the input is focused */
  }
  &.compact{
    height: 24px;
  }
}

.growWrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
}
.growWrap::after {
  /* Note the weird space! Needed to preventy jumpy behavior */
  content: attr(data-replicated-value) " ";

  /* This is how textarea text behaves */
  white-space: pre-wrap;

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;
}
.growWrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  resize: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
  overflow: hidden;
}
.growWrap > textarea,
.growWrap::after {
  width: calc(100% - 30px); /* Fill the entire allowed width with 10px margin on both sides */
  //min-height: 30px;
  padding-top: 10px;
  margin: {
    top: 10px;
    left: 10px;
    right: 10px;
  }
  resize: none;
  background-color: #212121; /* Gray background */
  color: #fff; /* Text color */
  border: 2px solid transparent; /* Transparent and rounded border */
  border-radius: 4px; /* Set the border radius to create a rounded appearance */
  ///* Set up transition for a smooth effect when the input is focused */
  //transition: border-color 0.2s ease;

  /* Place on top of each other */
  grid-area: 1 / 1 / 2 / 2;
}
