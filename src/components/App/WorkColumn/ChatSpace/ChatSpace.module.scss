@import "../../imageContainer";

$primary-color: #8ec217;
$secondary-color: #2C2F33;
$avatarIndentation: 12px;
$avatarSize: 40px;

.container {
  display: flex;
  flex-direction: column;
  height: 100%; // Set the container to fill the entire viewport height
  & > .firstRow {
    display: flex;
    align-items: center;
    padding-left: 10px;
    height: 52px; // Set the height of the first row
    background-color: #313338;
    color: #fff;
    border-bottom: 1.5px solid #1F2023;
    &>.icon{
      @include customImageContainer(10px, 25px)
    }
  }

  & > .secondRow {
    flex: 1;
    padding-right: 4px;
    // The second row will take the remaining space
    color: #fff;
    flex-direction: column;
    // Optionally, you can set some min and max height for resizing purposes
    overflow: auto; // Add scroll if content exceeds the max height
  }

  & > .thirdRow {
    min-height: 60px; // Set the height of the third row
    display: flex;
    flex-direction: column;
    background-color: #313338;
    color: #fff;
    margin-bottom: 0;
  }
}

.messageContainer {
  display: flex;
  color: #e8e8e8;
  flex-direction: column-reverse; // Show the components from bottom to top
  height: 100%; // Set the container to fill the entire viewport height
  overflow-y: auto;

  .compactMessage {
    margin-top: 4px;
    padding-left: $avatarIndentation;

    & > .text {
      margin-left: calc($avatarSize + 4px + $avatarIndentation);
    }
  }

  .message {
    margin-top: 10px;
    padding-left: $avatarIndentation;
    display: flex;
    width: calc(100% - $avatarIndentation);

    & > .avatar {
      @include customImageContainer(2px, $avatarSize);
      flex: 0 0 40px;
    }

    & > .text {
      margin-left: $avatarIndentation;

      strong{
        font-weight: normal;
      }
      & > .header {
        margin-top: 4px;
        display: flex;
        font-size: 13px;

        & > span {
          margin-top: 4px;
          margin-left: 5px;
          opacity: 50%;
          font-size: 12px;
          display: flex;
          align-items: flex-end;
        }

        margin-bottom: 4px;
      }
      flex: 1;
    }
  }
}

.customInput {
  width: calc(100% - 30px); /* Fill the entire allowed width with 10px margin on both sides */
  min-height: 30px;
  margin: {
    top: 10px;
    left: 10px;
    right: 10px;
  }
  resize: none;
  overflow: hidden;
  background-color: #383A40; /* Gray background */
  color: #fff; /* Text color */
  border: 2px solid transparent; /* Transparent and rounded border */
  border-radius: 10px; /* Set the border radius to create a rounded appearance */
  ///* Set up transition for a smooth effect when the input is focused */
  //transition: border-color 0.2s ease;
  //
  &:focus {
    outline: none;
    border-color: transparent; /* Change border color when the input is focused */
  }
}

/* For WebKit-based browsers (Chrome, Safari) */
::-webkit-scrollbar {
  width: 8px; /* Set the width of the scrollbar */

}

/* Track (background) of the scrollbar */
::-webkit-scrollbar-track {
  margin: 2px;
  border-radius: 4px;
  background-color: #2B2D31;
}

/* Handle (thumb) of the scrollbar */
::-webkit-scrollbar-thumb {
  background-color: #1A1B1E;
  border-radius: 4px; /* Rounded corners for the scrollbar handle */
}